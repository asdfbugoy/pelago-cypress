{"version":3,"sources":["components/movie/Search.js","components/movie/List.js","components/movie/Advanced.js","components/movie/Pagination.js","components/movie/index.js","components/movie/Detailed.js","AppStyled.js","store/movie/Pagination.js","store/movie/Params.js","store/movie/Data.js","store/index.js","components/movie/Header.js","App.js","serviceWorker.js","index.js"],"names":["observer","props","store","ref","React","useRef","processAPI","params","setParamsByField","current","name","value","advanced","fetchAPI","onChange","debounce","data-cy","className","disabled","loading","onClick","setAdvanced","StyledImg","styled","div","url","data","Search","Error","history","useHistory","map","d","i","key","Poster","id","imdbID","push","Title","Year","Type","types","e","target","Fragment","type","placeholder","y","page","pagination","max","min","pages","toString","totalResults","useParams","detailed","useEffect","fetchDetail","Response","Rated","Released","Runtime","Genre","Director","Writer","Actors","Plot","Language","Country","Awards","Metascore","imdbRating","imdbVotes","DVD","BoxOffice","Production","Website","Ratings","Source","Value","AppStyled","createGlobalStyle","model","optional","number","pageLength","views","self","getParent","parseInt","Math","floor","offset","diff","Array","from","length","actions","apikey","process","s","string","n","v","frozen","boolean","setById","applySnapshot","Data","array","getById","find","maybe","Params","Pagination","afterCreate","create","getQuery","Object","keys","k","encodeURIComponent","join","setLoading","flow","fetch","response","json","console","log","message","getSnapshot","StoreContext","createContext","Provider","useMst","useContext","StyledHeader","header","Header","App","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eaa5f9ef.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash.debounce';\nimport { observer } from 'mobx-react';\n\nconst Search = props => {\n    const { store } = props;\n    const ref = React.useRef();\n    const processAPI = () => {\n        store.params.setParamsByField(ref.current.name, ref.current.value);\n        !store.advanced && store.params.setParamsByField('page', '1');\n        store.fetchAPI();\n    };\n    const onChange = debounce(processAPI, 2000);\n    const onClick = () => processAPI();\n    return <div data-cy=\"search\">\n        <div className=\"input-group mb-3\">\n            <input name=\"s\" disabled={store.loading} ref={ref} data-cy=\"input\" onChange={onChange} className=\"form-control\" />\n            <div className=\"input-group-append\">\n                <button data-cy=\"btn\" disabled={store.loading} className=\"btn btn-outline-secondary\" onClick={onClick}><i className={store.loading ? 'fa fa-gear fa-spin fa-spiner' : 'fa fa-search'}></i></button>\n                <button data-cy=\"advanced\" disabled={store.loading} className=\"btn btn-outline-primary\" onClick={() => store.setAdvanced()}><i className=\"fa fa-search-plus\"></i></button>\n            </div>\n        </div>\n    </div>;\n};\n\nSearch.propTypes = {\n    store: PropTypes.object\n};\n\nexport default observer(Search);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { useHistory } from 'react-router-dom';\n\nconst StyledImg = styled.div`\n    width: 100%;\n    height: 150px;\n    background-image: url(${props => props.url !== 'N/A' ? props.url : 'https://via.placeholder.com/150'});\n    background-position: center center;\n    background-size: cover;\n    @media (min-width: 576px) {\n        width: 150px;\n    }\n`;\n\nconst List = props => {\n    const { store } = props;\n    const { Search, Error } = store.data;\n    const history = useHistory();\n    const onClick = id => () => history.push(`/${id}`);\n    return Error ?\n        <div data-cy=\"error\" className=\"alert alert-danger\">{Error}</div>\n        : <div className=\"row\" data-cy=\"list\">\n            {Search.map((d, i) => <div key={i} className=\"col-md-6 mb-3\">\n                <div className=\"card border shadow\" >\n                    <div className=\"row no-gutters\">\n                        <div className=\"col-sm-auto\">\n                            <StyledImg url={d.Poster} className=\"card-img\" />\n                        </div>\n                        <div className=\"col-sm\">\n                            <div className=\"card-body\">\n                                <div data-cy=\"click-to-detailed\" className=\"card-title primary pointer\" onClick={onClick(d.imdbID)}>{d.Title}</div>\n                                <div className=\"card-text secondary\">{d.imdbID}</div>\n                                <div data-cy=\"year\" className=\"card-text\">{d.Year}</div>\n                                <div data-cy=\"type\" className=\"card-text\">{d.Type}</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>)}\n        </div>;\n};\n\nList.propTypes = {\n    store: PropTypes.object\n};\n\nexport default observer(List);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\n\nconst Advanced = props => {\n    const { store } = props;\n    const { params, types } = store;\n\n    const onChange = e => store.params.setParamsByField(e.target.name, e.target.value);\n\n    return <React.Fragment>\n        <form data-cy=\"advanced-search\" className=\"row mb-3\">\n            <div className=\"col-sm mb-3 mb-sm-0\">\n                <select data-cy=\"type\" className=\"form-control\" onChange={onChange} name=\"type\" value={params.type}>\n                    <option value=\"\">select type</option>\n                    {types.map((d, i) => <option key={i} value={d}>{d}</option>)}\n                </select>\n            </div>\n            <div data-cy=\"year\" className=\"col-sm mb-3 mb-sm-0\"><input placeholder=\"Enter year. ex 2015\" type=\"number\" name=\"y\" value={params.y} className=\"form-control\" onChange={onChange} /></div>\n            <div data-cy=\"page\" className=\"col-sm mb-3 mb-sm-0\"><input placeholder=\"Enter page. ex 1/2/3/4/5\" type=\"number\" name=\"page\" value={params.page} className=\"form-control\" onChange={onChange} /></div>\n        </form>\n    </React.Fragment>;\n};\n\nAdvanced.propTypes = {\n    store: PropTypes.object\n};\n\nexport default observer(Advanced);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\n\nconst Pagination = props => {\n    const { store } = props;\n    const { page, max, min, pages } = store.pagination;\n    \n    const onClick = i => () => {\n        store.params.setParamsByField('page', i.toString());\n        store.fetchAPI();\n    };\n\n    return <React.Fragment>\n        <nav data-cy=\"pagination\">\n            <ul className=\"pagination justify-content-center table-responsive\">\n                <li className=\"page-item\"><button disabled={store.loading} className=\"page-link\" onClick={onClick(1)}><i className=\"fa fa-angle-double-left\"></i></button></li>\n                <li className=\"page-item\"><button disabled={store.loading} className=\"page-link\" onClick={onClick(page - 1 < min ? min : page - 1)}><i className=\"fa fa-angle-left\"></i></button></li>\n                {pages.map((d, i) => <li key={i} className={`page-item ${page === d ? 'active' : ''}`}><button disabled={store.loading} className=\"page-link\" onClick={onClick(d)}>{d}</button></li>)}\n                <li className=\"page-item\"><button disabled={store.loading} className=\"page-link\" onClick={onClick(page + 1 > max ? max : page + 1)}><i className=\"fa fa-angle-right\"></i></button></li>\n                <li className=\"page-item\"><button disabled={store.loading} className=\"page-link\" onClick={onClick(max)}><i className=\"fa fa-angle-double-right\"></i></button></li>\n            </ul>\n        </nav>\n    </React.Fragment >;\n};\n\nPagination.propTypes = {\n    store: PropTypes.object\n};\n\nexport default observer(Pagination);","import React from 'react';\n// import Header from './Header';\nimport Search from './Search';\nimport List from './List';\nimport Advanced from './Advanced';\nimport Pagination from './Pagination';\nimport { observer } from 'mobx-react';\nimport PropTypes from 'prop-types';\n\nconst Movie = props => {\n    const { store } = props;\n    return <section data-cy=\"movie\">\n        <Search store={store} />\n        {store.advanced && <Advanced store={store} />}\n        {store.loading? <div className=\"mb-3\">...loading <i className=\"fa fa-gear fa-spin fa-spinner\"></i></div> : <List store={store} />}\n        {store.data.totalResults > 0 && <Pagination store={store} />}\n    </section>;\n};\n\nMovie.propTypes = {\n    store: PropTypes.object\n};\n\nexport default observer(Movie);","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n// import { getSnapshot } from 'mobx-state-tree';\nimport { observer } from 'mobx-react';\nimport styled from 'styled-components';\n\nconst StyledImg = styled.div`\n    width: 100%;\n    height: 200px;\n    background-image: url(${props => props.url !== 'N/A' ? props.url : 'https://via.placeholder.com/150'});\n    background-position: center center;\n    background-size: cover;\n    @media (min-width: 576px) {\n        /* width: 150px; */\n        width: 50%;\n        height: 300px;\n    }\n`;\n\nconst Detailed = props => {\n    const { id } = useParams();\n    const { store } = props;\n    const { detailed } = store;\n    React.useEffect(() => {\n        store.fetchDetail(id);\n    }, [store, id]);\n    return store.loading ? <div>...Loading <i className=\"fa fa-gear fa-spin fa-spinner\"></i></div>\n        : detailed.Response ? <React.Fragment>\n            <div className=\"card border shadow\" data-cy=\"detailed\">\n                <div className=\"card-body\">\n                    <div className=\"table-responsive\">\n                        <StyledImg url={detailed.Poster} className=\"card-img m-auto\" />\n                        <table className=\"table\">\n                            <tbody>\n                                <tr>\n                                    <td>imdbID: </td>\n                                    <td>{detailed.imdbID}</td>\n                                </tr>\n                                <tr>\n                                    <td>Title: </td>\n                                    <td>{detailed.Title}</td>\n                                </tr>\n                                <tr>\n                                    <td>Title: </td>\n                                    <td>{detailed.Year}</td>\n                                </tr>\n                                <tr>\n                                    <td>Rated: </td>\n                                    <td>{detailed.Rated}</td>\n                                </tr>\n                                <tr>\n                                    <td>Released: </td>\n                                    <td>{detailed.Released}</td>\n                                </tr>\n                                <tr>\n                                    <td>Runtime: </td>\n                                    <td>{detailed.Runtime}</td>\n                                </tr>\n                                <tr>\n                                    <td>Genre: </td>\n                                    <td>{detailed.Genre}</td>\n                                </tr>\n                                <tr>\n                                    <td>Director: </td>\n                                    <td>{detailed.Director}</td>\n                                </tr>\n                                <tr>\n                                    <td>Writer: </td>\n                                    <td>{detailed.Writer}</td>\n                                </tr>\n                                <tr>\n                                    <td>Actors: </td>\n                                    <td>{detailed.Actors}</td>\n                                </tr>\n                                <tr>\n                                    <td>Plot: </td>\n                                    <td>{detailed.Plot}</td>\n                                </tr>\n                                <tr>\n                                    <td>Language: </td>\n                                    <td>{detailed.Language}</td>\n                                </tr>\n                                <tr>\n                                    <td>Country: </td>\n                                    <td>{detailed.Country}</td>\n                                </tr>\n                                <tr>\n                                    <td>Awards: </td>\n                                    <td>{detailed.Awards}</td>\n                                </tr>\n                                <tr>\n                                    <td>Metascore: </td>\n                                    <td>{detailed.Metascore}</td>\n                                </tr>\n                                <tr>\n                                    <td>imdbRating: </td>\n                                    <td>{detailed.imdbRating}</td>\n                                </tr>\n                                <tr>\n                                    <td>imdbVotes: </td>\n                                    <td>{detailed.imdbVotes}</td>\n                                </tr>\n                                <tr>\n                                    <td>Type: </td>\n                                    <td>{detailed.Type}</td>\n                                </tr>\n                                <tr>\n                                    <td>DVD: </td>\n                                    <td>{detailed.DVD}</td>\n                                </tr>\n                                <tr>\n                                    <td>BoxOffice: </td>\n                                    <td>{detailed.BoxOffice}</td>\n                                </tr>\n                                <tr>\n                                    <td>Production: </td>\n                                    <td>{detailed.Production}</td>\n                                </tr>\n                                <tr>\n                                    <td>Website: </td>\n                                    <td>{detailed.Website}</td>\n                                </tr>\n                                <tr>\n                                    <td>Ratings: </td>\n                                    <td>{detailed.Ratings.map((d, i) => <div key={i}>\n                                        <span>{d.Source}</span> = <span>{d.Value}</span>\n                                    </div>)}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </React.Fragment> : <div className=\"alert alert-danger\">{detailed.Error}</div>;\n};\n\nDetailed.propTypes = {\n    store: PropTypes.object\n};\n\nexport default observer(Detailed);","import { createGlobalStyle } from 'styled-components';\n\nconst AppStyled = createGlobalStyle`\n    /* @import 'https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css';\n    @import 'https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css'; */\n\n    body {\n        font-family: 'Helvetica Neue';\n        font-size: 16px;\n        color: #34283f;\n    }\n    \n    .primary {\n        color: #7faae4;\n    }\n    .secondary {\n        color: #834db7;\n    }\n    .tertiary {\n        color: #34283f;\n    }\n    .pointer {\n        cursor: pointer;\n    }\n`;\n\nexport default AppStyled;\n","import { types, getParent } from 'mobx-state-tree';\n\nexport default types.model({\n    min: types.optional(types.number, 1),\n    pageLength: types.optional(types.number, 5)\n}).views(self => ({\n    get page() {\n        return getParent(self).params.page ? parseInt(getParent(self).params.page, 10) : 1;\n    },\n    get max() {\n        const max = parseInt(getParent(self).data.totalResults / 10, 10);\n        return getParent(self).data.totalResults % 10 > 0 ? max + 1 : max;\n    },\n    get diff() {\n        return Math.floor(self.pageLength / 2);\n    },\n    get offset() {\n        let offset = self.page - self.diff;\n        if (offset < self.min) offset = self.min;\n        if (self.page + self.diff >= self.max) offset = self.max - (self.diff * 2);\n        if (self.max < self.pageLength) offset = self.min;\n        return offset;\n    },\n    get pages() {\n        return Array.from({ length: self.max > self.pageLength ? self.pageLength : self.max }).map((d, i) => i + self.offset);\n    }\n})).actions(() => ({\n\n}));","\nimport { types } from 'mobx-state-tree';\n\nexport default types.model({\n    apikey: process.env.REACT_APP_APIKEY || '',\n    s: types.optional(types.string, ''),\n    page: types.optional(types.string, ''),\n    y: types.optional(types.string, ''),\n    type: types.optional(types.string, '')\n}).actions(self => ({\n    setParamsByField(n, v) {\n        self[n] = v;\n    }\n}));","import { types, applySnapshot } from 'mobx-state-tree';\n\n// const Search = types.model({\n//     Title: types.optional(types.string, ''),\n//     Year: types.optional(types.string, ''),\n//     imdbID: types.optional(types.string, ''),\n//     Type: types.optional(types.string, ''),\n//     Poster: types.optional(types.string, '')\n// });\n\nexport const Search = types.model({\n    Title: types.optional(types.string, ''),\n    Year: types.optional(types.string, ''),\n    Rated: types.optional(types.string, ''),\n    Released: types.optional(types.string, ''),\n    Runtime: types.optional(types.string, ''),\n    Genre: types.optional(types.string, ''),\n    Director: types.optional(types.string, ''),\n    Writer: types.optional(types.string, ''),\n    Actors: types.optional(types.string, ''),\n    Plot: types.optional(types.string, ''),\n    Language: types.optional(types.string, ''),\n    Country: types.optional(types.string, ''),\n    Awards: types.optional(types.string, ''),\n    Poster: types.optional(types.string, ''),\n    Ratings: types.frozen(),\n    Metascore: types.optional(types.string, ''),\n    imdbRating: types.optional(types.string, ''),\n    imdbVotes: types.optional(types.string, ''),\n    imdbID: types.optional(types.string, ''),\n    Type: types.optional(types.string, ''),\n    DVD: types.optional(types.string, ''),\n    BoxOffice: types.optional(types.string, ''),\n    Production: types.optional(types.string, ''),\n    Website: types.optional(types.string, ''),\n    Response: types.optional(types.boolean, false),\n    Error: types.optional(types.string, '')\n}).actions(self => ({\n    setById(d) {\n        applySnapshot(self, d);\n    }\n}));\n\nexport const Data =  types.model({\n    Response: types.optional(types.boolean, false),\n    totalResults: types.optional(types.number, 0),\n    Search: types.array(Search, []),\n    Error: types.optional(types.string, '')\n}).actions(self => ({\n    getById(id) {\n        return self.Search.find(d => d.imdbID === id);\n    }\n}));","import React from 'react';\nimport { types, flow, applySnapshot, getSnapshot } from 'mobx-state-tree';\nimport Pagination from './movie/Pagination';\nimport Params from './movie/Params';\nimport { Data, Search } from './movie/Data';\n\nconst Store = types.model({\n    url: 'https://www.omdbapi.com/?',\n    loading: types.optional(types.boolean, false),\n    advanced: types.optional(types.boolean, false),\n    params: types.maybe(Params),\n    data: types.maybe(Data),\n    types: types.frozen(['movie', 'series', 'episode']),\n    pagination: types.maybe(Pagination),\n    detailed: types.maybe(Search)\n}).views(() => ({\n\n})).actions(self => ({\n    afterCreate() {\n        self.params = Params.create();\n        self.data = Data.create();\n        self.pagination = Pagination.create();\n        self.detailed = Search.create();\n    },\n    getQuery(d) {\n        return self.url + Object.keys(d)\n            .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(d[k]))\n            .join('&');\n    },\n    setAdvanced() {\n        self.advanced = !self.advanced;\n        self.params = self.advanced ? self.params : Params.create({\n            s: self.params.s\n        });\n    },\n    setLoading(v) {\n        self.loading = v;\n    },\n    fetchDetail: flow(function* fetchDetail(id) {\n        self.setLoading(true);\n        try {\n            const response = yield fetch(self.getQuery({ apikey: self.params.apikey, i: id }), {\n                // method: 'POST', // or 'PUT'\n                // headers: {\n                //     'Content-Type': 'application/json',\n                // },\n                // body: JSON.stringify(params),\n            });\n\n            const data = yield response.json();\n            // self.data.Search.map(d => d.setById(data));\n            applySnapshot(self.detailed, {\n                ...data,\n                Response: data.Response === 'True' ? true : false,\n            });\n            self.setLoading(false);\n            return response;\n        } catch (error) {\n            console.log(error.message);\n            applySnapshot(self.detailed, {\n                Error: error.message,\n                Response: false\n            });\n            self.setLoading(false);\n        }\n    }),\n    fetchAPI: flow(function* fetchAPI() {\n        self.setLoading(true);\n        try {\n            const response = yield fetch(self.getQuery(getSnapshot(self.params)), {\n                // method: 'POST', // or 'PUT'\n                // headers: {\n                //     'Content-Type': 'application/json',\n                // },\n                // body: JSON.stringify(params),\n            });\n\n            const d = yield response.json();\n            applySnapshot(self.data, {\n                ...d,\n                totalResults: d.totalResults ? parseInt(d.totalResults, 10) : 0,\n                Response: d.Response === 'True' ? true : false,\n                Error: d.Error ? d.Error : ''\n            });\n            self.setLoading(false);\n\n            return response;\n        } catch (error) {\n            applySnapshot(self.data, {\n                totalResults: 0,\n                Response: false,\n                Error: error.message\n            });\n            self.setLoading(false);\n        }\n    })\n}));\n/**\n * thinking of moving below code to custom hooks\n */\nexport const store = Store.create();\n\nconst StoreContext = React.createContext();\n\nexport const Provider = StoreContext.Provider;\n\nexport function useMst() {\n    const store = React.useContext(StoreContext);\n    if (store === null) throw new Error('Store cannot be null, please add a context provider');\n    return store;\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\n\nconst StyledHeader = styled.header`\n    font-size: 18px;\n`;\n\nconst Header = () => {\n    const history = useHistory();\n    const onClick = () => history.push('/');\n    return <StyledHeader data-cy=\"header\" className=\"mb-3 card border shadow pointer\" onClick={onClick}>\n        <div className=\"card-body\">\n            <div className=\"primary\">Singtel-GO</div>\n            <div className=\"secondary\">Quote Sample List</div>\n        </div>\n    </StyledHeader>;\n};\n\nexport default Header;","import React from 'react';\nimport Movie from 'components/movie';\nimport Detailed from 'components/movie/Detailed';\nimport AppStyled from 'AppStyled';\nimport PropTypes from 'prop-types';\nimport { useMst } from 'store';\nimport {\n    HashRouter as Router,\n    \n    Switch,\n    Route,\n    // Link,\n    // useRouteMatch,\n    // useParams\n} from 'react-router-dom';\nimport Header from 'components/movie/Header';\n\nconst App = () => {\n    return <React.Fragment>\n        <AppStyled />\n        <Router>\n            <article className=\"App container\" data-cy=\"app\">\n                <Header />\n                <Switch>\n                    <Route path=\"/:id\">\n                        <Detailed store={useMst()} />\n                    </Route>\n                    <Route path=\"/\">\n                        <Movie store={useMst()} />\n                    </Route>\n                </Switch>\n            </article>\n        </Router>\n    </React.Fragment>;\n};\n\nApp.propTypes = {\n    store: PropTypes.object\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider, store } from 'store';\nimport { onPatch, onSnapshot } from 'mobx-state-tree';\nimport makeInspectable from 'mobx-devtools-mst';\n\nconst mstDebug = () => {\n    makeInspectable(store);\n    onPatch(store, patch => console.log(patch));\n    onSnapshot(store, snapshot => console.log('Snapshot: ', snapshot));\n};\n\nprocess.env.NODE_ENV === 'development' && mstDebug();\n\nReactDOM.render(<Provider value={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}