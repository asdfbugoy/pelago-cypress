{"version":3,"sources":["components/movie/Header.js","components/movie/Search.js","components/movie/List.js","components/movie/Advanced.js","components/movie/Pagination.js","components/movie/index.js","AppStyled.js","store/movie/Pagination.js","store/movie/Params.js","store/movie/Data.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["StyledHeader","styled","header","Header","data-cy","className","observer","props","store","onChange","debounce","params","setParamsByField","ref","current","name","value","advanced","fetchAPI","React","useRef","disabled","loading","onClick","setAdvanced","StyledImg","div","url","Search","Error","map","d","i","key","Poster","Title","imdbID","Year","Type","types","e","target","Fragment","type","placeholder","y","page","pagination","max","min","pages","toString","data","totalResults","AppStyled","createGlobalStyle","model","optional","number","pageLength","views","self","getParent","parseInt","Math","floor","offset","diff","Array","from","length","actions","apikey","s","string","n","v","Response","boolean","array","maybe","Params","Data","frozen","Pagination","Object","keys","getSnapshot","k","encodeURIComponent","join","afterCreate","create","setLoading","flow","fetch","query","response","json","applySnapshot","message","StoreContext","createContext","Provider","useMst","useContext","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4a61f547.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledHeader = styled.header`\n    font-size: 18px;\n`;\n\nconst Header = () => {\n    return <StyledHeader data-cy=\"header\" className=\"mb-3 card border shadow\">\n        <div className=\"card-body\">\n            <div className=\"primary\">Singtel-GO</div>\n            <div className=\"secondary\">Quote Sample List</div>\n        </div>\n    </StyledHeader>;\n};\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash.debounce';\nimport { observer } from 'mobx-react';\n\nconst Search = props => {\n    const { store } = props;\n    const onChange = debounce(() => {\n        store.params.setParamsByField(ref.current.name, ref.current.value);\n        !store.advanced && store.params.setParamsByField('page', '1');\n        store.fetchAPI();\n    }, 2000);\n\n    const onClick = () => {\n        !store.advanced && store.params.setParamsByField('page', '1');\n        store.fetchAPI();\n    };\n    const ref = React.useRef();\n\n    return <div data-cy=\"search\">\n        <div className=\"input-group mb-3\">\n            <input name=\"s\" disabled={store.loading} ref={ref} data-cy=\"input\" onChange={onChange} className=\"form-control\" />\n            <div className=\"input-group-append\">\n                <button data-cy=\"btn\" disabled={store.loading} className=\"btn btn-outline-secondary\" onClick={onClick}><i className={store.loading ? 'fa fa-gear fa-spin fa-spiner' : 'fa fa-search'}></i></button>\n                <button data-cy=\"advanced\" disabled={store.loading} className=\"btn btn-outline-primary\" onClick={() => store.setAdvanced()}><i className=\"fa fa-search-plus\"></i></button>\n            </div>\n        </div>\n    </div>;\n};\n\nSearch.propTypes = {\n    store: PropTypes.object\n};\n\nexport default observer(Search);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { observer } from 'mobx-react';\n\nconst StyledImg = styled.div`\n    width: 100%;\n    height: 150px;\n    background-image: url(${props => props.url !== 'N/A' ? props.url : 'https://via.placeholder.com/150'});\n    background-position: center center;\n    background-size: cover;\n    @media (min-width: 576px) {\n        width: 150px;\n    }\n`;\n\nconst List = props => {\n    const { Search, Error } = props;\n\n    return Error ?\n        <div data-cy=\"error\">{Error}</div>\n        : <div className=\"row\" data-cy=\"list\">\n            {Search.map((d, i) => <div key={i} className=\"col-md-6 mb-3\">\n                <div className=\"card border shadow\">\n                    <div className=\"row no-gutters\">\n                        <div className=\"col-sm-auto\">\n                            <StyledImg url={d.Poster} className=\"card-img\" />\n                        </div>\n                        <div className=\"col-sm\">\n                            <div className=\"card-body\">\n                                <div className=\"card-title primary\">{d.Title}</div>\n                                <div className=\"card-text secondary\">{d.imdbID}</div>\n                                <div data-cy=\"year\" className=\"card-text\">{d.Year}</div>\n                                <div data-cy=\"type\" className=\"card-text\">{d.Type}</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>)}\n        </div>;\n};\n\nList.propTypes = {\n    Search: PropTypes.array,\n    Error: PropTypes.string\n};\n\nexport default observer(List);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\n\nconst Advanced = props => {\n    const { store } = props;\n    const { params, types } = store;\n\n    const onChange = e => store.params.setParamsByField(e.target.name, e.target.value);\n\n    return <React.Fragment>\n        <form data-cy=\"advanced-search\" className=\"row mb-3\">\n            <div className=\"col-sm mb-3 mb-sm-0\">\n                <select data-cy=\"type\" className=\"form-control\" onChange={onChange} name=\"type\" value={params.type}>\n                    <option value=\"\">select type</option>\n                    {types.map((d, i) => <option key={i} value={d}>{d}</option>)}\n                </select>\n            </div>\n            <div data-cy=\"year\" className=\"col-sm mb-3 mb-sm-0\"><input placeholder=\"Enter year. ex 2015\" type=\"number\" name=\"y\" value={params.y} className=\"form-control\" onChange={onChange} /></div>\n            <div data-cy=\"page\" className=\"col-sm mb-3 mb-sm-0\"><input placeholder=\"Enter page. ex 1/2/3/4/5\" type=\"number\" name=\"page\" value={params.page} className=\"form-control\" onChange={onChange} /></div>\n        </form>\n    </React.Fragment>;\n};\n\nAdvanced.propTypes = {\n    store: PropTypes.object\n};\n\nexport default observer(Advanced);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\n\nconst Pagination = props => {\n    const { store } = props;\n    const { page, max, min, pages } = store.pagination;\n    \n    const onClick = i => () => {\n        store.params.setParamsByField('page', i.toString());\n        store.fetchAPI();\n    };\n\n    return <React.Fragment>\n        <nav data-cy=\"pagination\">\n            <ul className=\"pagination justify-content-center table-responsive\">\n                <li className=\"page-item\"><button disabled={store.loading} className=\"page-link\" onClick={onClick(1)}><i className=\"fa fa-angle-double-left\"></i></button></li>\n                <li className=\"page-item\"><button disabled={store.loading} className=\"page-link\" onClick={onClick(page - 1 < min ? min : page - 1)}><i className=\"fa fa-angle-left\"></i></button></li>\n                {pages.map((d, i) => <li key={i} className={`page-item ${page === d ? 'active' : ''}`}><button disabled={store.loading} className=\"page-link\" onClick={onClick(d)}>{d}</button></li>)}\n                <li className=\"page-item\"><button disabled={store.loading} className=\"page-link\" onClick={onClick(page + 1 > max ? max : page + 1)}><i className=\"fa fa-angle-right\"></i></button></li>\n                <li className=\"page-item\"><button disabled={store.loading} className=\"page-link\" onClick={onClick(max)}><i className=\"fa fa-angle-double-right\"></i></button></li>\n            </ul>\n        </nav>\n    </React.Fragment >;\n};\n\nPagination.propTypes = {\n    store: PropTypes.object\n};\n\nexport default observer(Pagination);","import React from 'react';\nimport Header from './Header';\nimport Search from './Search';\nimport List from './List';\nimport Advanced from './Advanced';\nimport Pagination from './Pagination';\nimport { observer, PropTypes } from 'mobx-react';\n// import PropTypes from 'prop-types';\n\nconst Movie = props => {\n    const { store } = props;\n    return <section data-cy=\"movie\">\n        <Header />\n        <Search store={store} />\n        {store.advanced && <Advanced store={store} />}\n        <List {...store.data} />\n        {store.data.totalResults > 0 && <Pagination store={store} />}\n    </section>;\n};\n\nMovie.propTypes = {\n    store: PropTypes.observableObject\n};\n\nexport default observer(Movie);","import { createGlobalStyle } from 'styled-components';\n\nconst AppStyled = createGlobalStyle`\n    /* @import 'https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css';\n    @import 'https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css'; */\n\n    body {\n        font-family: 'Helvetica Neue';\n        font-size: 16px;\n        color: #34283f;\n    }\n    \n    .primary {\n        color: #7faae4;\n    }\n    .secondary {\n        color: #834db7;\n    }\n    .tertiary {\n        color: #34283f;\n    }\n`;\n\nexport default AppStyled;\n","import { types, getParent } from 'mobx-state-tree';\n\nexport default types.model({\n    min: types.optional(types.number, 1),\n    pageLength: types.optional(types.number, 5)\n}).views(self => ({\n    get page() {\n        return getParent(self).params.page ? parseInt(getParent(self).params.page, 10) : 1;\n    },\n    get max() {\n        const max = parseInt(getParent(self).data.totalResults / 10, 10);\n        return getParent(self).data.totalResults % 10 > 0 ? max + 1 : max;\n    },\n    get diff() {\n        return Math.floor(self.pageLength / 2);\n    },\n    get offset() {\n        let offset = self.page - self.diff;\n        if (offset < self.min) offset = self.min;\n        if (self.page + self.diff >= self.max) offset = self.max - (self.diff * 2);\n        if (self.max < self.pageLength) offset = self.min;\n        return offset;\n    },\n    get pages() {\n        return Array.from({ length: self.max > self.pageLength ? self.pageLength : self.max }).map((d, i) => i + self.offset);\n    }\n})).actions(() => ({\n\n}));","\nimport { types } from 'mobx-state-tree';\n\nexport default types.model({\n    apikey: '185c5ebb',\n    s: types.optional(types.string, ''),\n    page: types.optional(types.string, ''),\n    y: types.optional(types.string, ''),\n    type: types.optional(types.string, '')\n}).actions(self => ({\n    setParamsByField(n, v) {\n        self[n] = v ? v : '';\n    }\n}));","import { types } from 'mobx-state-tree';\n\nconst Search = types.model({\n    Title: types.optional(types.string, ''),\n    Year: types.optional(types.string, ''),\n    imdbID: types.optional(types.string, ''),\n    Type: types.optional(types.string, ''),\n    Poster: types.optional(types.string, '')\n});\n\nexport default types.model({\n    Response: types.optional(types.boolean, false),\n    totalResults: types.optional(types.number, 0),\n    Search: types.array(Search, []),\n    Error: types.optional(types.string, '')\n});","import React from 'react';\nimport { types, flow, applySnapshot, getSnapshot } from 'mobx-state-tree';\nimport Pagination from './movie/Pagination';\nimport Params from './movie/Params';\nimport Data from './movie/Data';\n\nconst Store = types.model({\n    url: 'https://www.omdbapi.com/?',\n    loading: types.optional(types.boolean, false),\n    advanced: types.optional(types.boolean, false),\n    params: types.maybe(Params),\n    data: types.maybe(Data),\n    types: types.frozen(['movie', 'series', 'episode']),\n    pagination: types.maybe(Pagination)\n}).views(self => ({\n    get query() {\n        return self.url + Object.keys(getSnapshot(self.params))\n            .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(getSnapshot(self.params)[k]))\n            .join('&');\n    },\n})).actions(self => ({\n    afterCreate() {\n        self.params = Params.create();\n        self.data = Data.create();\n        self.pagination = Pagination.create();\n    },\n    setAdvanced() {\n        self.advanced = !self.advanced;\n        self.params = self.advanced ? self.params : Params.create({\n            s: self.params.s\n        });\n    },\n    setLoading(v) {\n        self.loading = v;\n    },\n    fetchAPI: flow(function* fetchAPI() {\n        self.setLoading(true);\n        try {\n            const response = yield fetch(self.query, {\n                // method: 'POST', // or 'PUT'\n                // headers: {\n                //     'Content-Type': 'application/json',\n                // },\n                // body: JSON.stringify(params),\n            });\n\n            const d = yield response.json();\n            applySnapshot(self.data, {\n                ...d,\n                totalResults: d.totalResults ? parseInt(d.totalResults, 10) : 0,\n                Response: d.Response === 'True' ? true : false,\n                Error: d.Error ? d.Error : ''\n            });\n            self.setLoading(false);\n\n            return response;\n        } catch (error) {\n            applySnapshot(self.data, {\n                totalResults: 0,\n                Response: false,\n                Error: error.message\n            });\n            self.setLoading(false);\n        }\n    })\n}));\n/**\n * thinking of moving below code to custom hooks\n */\nexport const store = Store.create();\n\nconst StoreContext = React.createContext();\n\nexport const Provider = StoreContext.Provider;\n\nexport function useMst() {\n    const store = React.useContext(StoreContext);\n    if (store === null) throw new Error('Store cannot be null, please add a context provider');\n    return store;\n}","import React from 'react';\nimport Movie from 'components/movie';\nimport AppStyled from 'AppStyled';\nimport PropTypes from 'prop-types';\nimport { useMst } from 'store';\n\nconst App = () => {\n    return <React.Fragment>\n        <AppStyled />\n        <article className=\"App container\" data-cy=\"app\">\n            <Movie store={useMst()} />\n        </article>\n    </React.Fragment>;\n};\n\nApp.propTypes = {\n    store: PropTypes.object\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider, store } from 'store';\nimport { onPatch, onSnapshot } from 'mobx-state-tree';\nimport makeInspectable from 'mobx-devtools-mst';\n\nconst mstDebug = () => {\n    makeInspectable(store);\n    onPatch(store, patch => console.log(patch));\n    onSnapshot(store, snapshot => console.log('Snapshot: ', snapshot));\n};\n\nprocess.env.NODE_ENV === 'development' && mstDebug();\n\nReactDOM.render(<Provider value={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}